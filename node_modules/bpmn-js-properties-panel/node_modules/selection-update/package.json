{
  "name": "selection-update",
  "version": "0.1.2",
  "description": "Computing selection updates on external INPUT value changes, browser style",
  "main": "index.js",
  "scripts": {
    "test": "mocha test.js"
  },
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/nikku/selection-update.git"
  },
  "keywords": [
    "selection",
    "update",
    "input",
    "textarea",
    "value",
    "html",
    "browserify"
  ],
  "author": {
    "name": "Nico Rehwaldt",
    "email": "git_nikku@nixis.de"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/nikku/selection-update/issues"
  },
  "homepage": "https://github.com/nikku/selection-update",
  "devDependencies": {
    "chai": "^3.4.1",
    "mocha": "^2.3.4"
  },
  "readme": "# selection-update\n\n[![Build Status](https://travis-ci.org/nikku/selection-update.svg?branch=master)](https://travis-ci.org/nikku/selection-update)\n\nComputing input selection updates on external file changes, as if we used browser managed _undo_ and _redo_.\n\n\n## API\n\n```javascript\n/**\n * Calculate the selection update for the given\n * current and new input values.\n *\n * @param {Object} currentSelection as {start, end}\n * @param {String} currentValue\n * @param {String} newValue\n *\n * @return {Object} newSelection as {start, end}\n */\ncalculateUpdate(currentSelection, currentValue, newValue);\n```\n\n\n## Usage\n\n```javascript\nvar selectionUpdate = require('selection-update');\n\n/**\n * Update input with new value.\n\n * @param {Node} $input\n * @param {String} newValue\n */\nfunction updateInput($input, newValue) {\n\n  var newSelection;\n\n  // only retrieve and restore input, if the element\n  // is currently active\n  if (document.activeElement === $input) {\n\n    // get the current selection and pass it in as {start, end}\n    newSelection = selectionUpdate(getSelection($input), $input.value, newValue);\n  }\n\n  // apply new value, will naturally send selection to input end\n  $input.value = value;\n\n  if (newSelection) {\n    // set new {start, end} selection on input\n    setSelection($input, selection);\n  }\n}\n```\n\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "selection-update@0.1.2",
  "dist": {
    "shasum": "c734dc809eb46d03d135c822da86f758b773a055"
  },
  "_from": "selection-update@^0.1.2",
  "_resolved": "http://registry.npmjs.org/selection-update/-/selection-update-0.1.2.tgz"
}
